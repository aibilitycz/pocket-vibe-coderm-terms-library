[
  {
    "id": "api",
    "term": "API",
    "czechName": "Aplikační programové rozhraní",
    "description": "API je způsob, jak spolu komunikují různé aplikace nebo služby. Představ si to jako menu v restauraci - říká ti, co si můžeš objednat a jak.",
    "practicalExample": "Když tvoje frontend aplikace potřebuje získat data z databáze, pošle požadavek na API endpoint jako '/api/users'. API pak vrátí data ve formátu JSON.",
    "relatedTerms": ["backend", "frontend", "endpoint", "json", "rest-api", "graphql"],
    "difficulty": "🌱",
    "category": "architecture",
    "aiTip": "Řekni AI: 'Vytvoř API endpoint pro získání seznamu uživatelů' místo technických detailů.",
    "tags": ["komunikace", "rozhraní", "data"],
    "learnMore": "https://www.redhat.com/en/topics/api/what-are-application-programming-interfaces"
  },
  {
    "id": "frontend",
    "term": "Frontend",
    "czechName": "Klientská část",
    "description": "Frontend je vše, co vidí a s čím interaguje uživatel - webová stránka, aplikace v mobilu. Je to jako výkladní skříň obchodu.",
    "practicalExample": "V Lovable vytváříš frontend komponenty pomocí promptů. AI generuje React komponenty, které uživatelé vidí v prohlížeči.",
    "relatedTerms": ["backend", "react", "ui", "ux"],
    "difficulty": "🌱",
    "category": "architecture",
    "aiTip": "Popis AI, jak má vypadat rozhraní: 'Chci formulář s 3 poli a tlačítkem'",
    "tags": ["ui", "uživatelské rozhraní", "web"],
    "learnMore": "https://developer.mozilla.org/en-US/docs/Learn/Front-end_web_developer"
  },
  {
    "id": "backend",
    "term": "Backend",
    "czechName": "Serverová část",
    "description": "Backend je 'kuchyně' aplikace - zpracovává data, komunikuje s databází, stará se o logiku. Uživatel ho nevidí, ale bez něj by frontend nefungoval.",
    "practicalExample": "Když se uživatel přihlásí, backend zkontroluje jeho heslo v databázi a rozhodne, jestli mu povolí přístup.",
    "relatedTerms": ["api", "database", "server", "authentication"],
    "difficulty": "🌱",
    "category": "architecture",
    "aiTip": "Řekni AI: 'Potřebuji backend funkcionalitu pro přihlášení uživatelů'",
    "tags": ["server", "logika", "databáze"],
    "learnMore": "https://roadmap.sh/backend"
  },
  {
    "id": "vibe-coding",
    "term": "Vibe Coding",
    "czechName": "Programování přes konverzaci",
    "description": "Vibe Coding je způsob programování, kde místo psaní kódu komunikuješ s AI pomocí přirozené řeči. AI rozumí tvému záměru a vytvoří kód za tebe.",
    "practicalExample": "Místo učení se syntaxe ReactJS řekneš AI: 'Chci stránku s formulářem, kde si uživatel může objednat pizza.' AI vytvoří celou komponentu.",
    "relatedTerms": ["ai-assistant", "prompt-engineering", "no-code"],
    "difficulty": "🌱",
    "category": "vibe-coding",
    "aiTip": "Buď konkrétní: 'Chci modré tlačítko, které pošle email' funguje lépe než 'udělej tlačítko'",
    "tags": ["ai", "no-code", "konverzace"],
    "learnMore": "https://www.anthropic.com/claude"
  },
  {
    "id": "authentication",
    "term": "Authentication",
    "czechName": "Autentifikace / Ověření identity",
    "description": "Authentication je proces ověření, že jsi opravdu ty, za koho se vydáváš. Jako když ukážeš občanku na poště.",
    "practicalExample": "Když zadáš email a heslo do přihlašovacího formuláře, aplikace tě 'autentifikuje' - zkontroluje, že heslo sedí k emailu.",
    "relatedTerms": ["authorization", "jwt", "session", "password"],
    "difficulty": "🌱",
    "category": "security",
    "aiTip": "Řekni AI: 'Chci přihlašovací systém s emailem a heslem'",
    "tags": ["bezpečnost", "přihlášení", "ověření"],
    "learnMore": "https://auth0.com/intro-to-iam/what-is-authentication"
  },
  {
    "id": "database",
    "term": "Database",
    "czechName": "Databáze",
    "description": "Databáze je organizované úložiště dat. Jako digitální kartotéka, kde si aplikace pamatuje informace o uživatelích, objednávkách, produktech.",
    "practicalExample": "V Streamlit appce můžeš mít databázi SQLite, která si pamatuje všechny uživatele a jejich nastavení. AI ti pomůže vytvořit tabulky a dotazy.",
    "relatedTerms": ["sql", "crud", "table", "query"],
    "difficulty": "🌱",
    "category": "data",
    "aiTip": "Popis AI struktur: 'Potřebuji tabulku uživatelů s jménem, emailem a datem registrace'",
    "tags": ["data", "úložiště", "sql"],
    "learnMore": "https://www.w3schools.com/sql/"
  },
  {
    "id": "deployment",
    "term": "Deployment",
    "czechName": "Nasazení do produkce",
    "description": "Deployment je proces, kdy tvoji aplikaci zpřístupníš ostatním lidem na internetu. Jako když otevřeš obchod veřejnosti.",
    "practicalExample": "Když máš hotovou aplikaci v Streamlit, můžeš ji 'deployovat' na Streamlit Cloud nebo Vercel, aby k ní měli přístup i ostatní.",
    "relatedTerms": ["production", "hosting", "domain", "cloud"],
    "difficulty": "🚀",
    "category": "performance",
    "aiTip": "Řekni AI: 'Jak můžu nasadit moji Streamlit aplikaci online?'",
    "tags": ["produkce", "online", "hosting"],
    "learnMore": "https://vercel.com/guides/deploying-nextjs-with-vercel"
  },
  {
    "id": "github",
    "term": "GitHub",
    "czechName": "GitHub",
    "description": "GitHub je platforma pro ukládání a sdílení kódu. Jako Google Drive, ale speciálně navržený pro programátory a jejich projekty.",
    "practicalExample": "Ve Vibe Coding Summer ukládáš svoje AI-generované projekty na GitHub, aby sis je mohl kdykoliv stáhnout a pokračovat v práci.",
    "relatedTerms": ["git", "repository", "version-control", "commit"],
    "difficulty": "🌱",
    "category": "tools",
    "aiTip": "Řekni AI: 'Pomož mi nahrát můj projekt na GitHub'",
    "tags": ["verzování", "kód", "sdílení"],
    "learnMore": "https://docs.github.com/en/get-started"
  },
  {
    "id": "streamlit",
    "term": "Streamlit",
    "czechName": "Streamlit",
    "description": "Streamlit je Python framework pro rychlé vytváření webových aplikací. Skvělé pro datové aplikace a prototypy bez znalosti HTML/CSS.",
    "practicalExample": "S pomocí AI můžeš v Streamlit vytvořit dashboard pro sledování prodejů - grafy, filtry, exporty. Stačí popsat, co chceš.",
    "relatedTerms": ["python", "web-app", "dashboard", "prototype"],
    "difficulty": "🌱",
    "category": "tools",
    "aiTip": "Řekni AI: 'Vytvoř Streamlit app s grafem prodejů za poslední měsíc'",
    "tags": ["python", "web app", "dashboard"],
    "learnMore": "https://docs.streamlit.io/"
  },
  {
    "id": "json",
    "term": "JSON",
    "czechName": "JSON formát",
    "description": "JSON je způsob, jak strukturovat a přenášet data mezi aplikacemi. Vypadá jako seznam s názvy a hodnotami v složených závorkách.",
    "practicalExample": "Když API pošle data o uživateli, vypadá to takto: {\"name\": \"Pavel\", \"email\": \"pavel@email.cz\", \"age\": 25}",
    "relatedTerms": ["api", "data", "format", "javascript"],
    "difficulty": "🌱",
    "category": "data",
    "aiTip": "Řekni AI: 'Vrať mi data ve formátu JSON' pro strukturované odpovědi",
    "tags": ["formát", "data", "struktura"],
    "learnMore": "https://www.json.org/json-en.html"
  },
  {
    "id": "prompt-engineering",
    "term": "Prompt Engineering",
    "czechName": "Navrhování promptů",
    "description": "Prompt Engineering je umění psát efektivní instrukce pro AI. Čím lépe popíšeš, co chceš, tím lepší výsledek dostaneš.",
    "practicalExample": "Špatně: 'Udělej web'. Dobře: 'Vytvoř responzivní stránku pro pizzerii s menu, objednávkovým formulářem a kontakty. Barvy: červená a bílá.'",
    "relatedTerms": ["ai-assistant", "vibe-coding", "instructions", "llm"],
    "difficulty": "🚀",
    "category": "vibe-coding",
    "aiTip": "Buď specifický, uváděj příklady a děl úkoly na menší části",
    "tags": ["ai", "instrukce", "komunikace"],
    "learnMore": "https://platform.openai.com/docs/guides/prompt-engineering"
  },
  {
    "id": "llm",
    "term": "LLM",
    "czechName": "Velký jazykový model",
    "description": "LLM jsou pokročilé AI modely trénované na obrovských množstvích textových dat. Umí rozumět a generovat text podobně jako člověk.",
    "practicalExample": "ChatGPT, Claude nebo Gemini jsou příklady LLM. Když zadáš prompt 'Napiš funkci pro validaci emailu', LLM pochopí kontext a vytvoří funkční kód.",
    "relatedTerms": ["prompt-engineering", "ai-assistant"],
    "difficulty": "🚀",
    "category": "vibe-coding",
    "aiTip": "LLM fungují lépe s jasnými instrukcemi a kontextem",
    "tags": ["ai", "model", "generování"],
    "learnMore": "https://www.anthropic.com/index/introducing-claude"
  },
  {
    "id": "rag",
    "term": "RAG",
    "czechName": "Generování rozšířené o vyhledávání",
    "description": "RAG kombinuje sílu LLM s přístupem k aktuálním informacím. AI najde relevantní data a pak generuje odpověď na jejich základě.",
    "practicalExample": "Chatbot pro e-shop používá RAG - nejdřív vyhledá aktuální informace o produktech v databázi, pak sestaví odpověď zákazníkovi s aktuálními cenami.",
    "relatedTerms": ["llm", "vector-database", "embeddings", "ai-assistant"],
    "difficulty": "🔥",
    "category": "vibe-coding",
    "aiTip": "RAG je užitečný pro AI systémy, které potřebují aktuální data",
    "tags": ["ai", "vyhledávání", "data"],
    "learnMore": "https://research.ibm.com/blog/retrieval-augmented-generation-RAG"
  },
  {
    "id": "vector-database",
    "term": "Vector Database",
    "czechName": "Vektorová databáze",
    "description": "Specializovaná databáze pro ukládání a vyhledávání vektorů - číselných reprezentací textů nebo obrázků podle jejich významu.",
    "practicalExample": "V aplikaci s RAG se dokumenty převedou na vektory a uloží do vektorové databáze. Když se uživatel zeptá, najde se podobný vektor a vrátí relevantní dokument.",
    "relatedTerms": ["rag", "embeddings", "semantic-search"],
    "difficulty": "🔥",
    "category": "data",
    "aiTip": "Vector databáze umožňují sémantické vyhledávání místo přesného textu",
    "tags": ["ai", "databáze", "vyhledávání"],
    "learnMore": "https://www.pinecone.io/learn/vector-database/"
  },
  {
    "id": "react",
    "term": "React",
    "czechName": "React knihovna",
    "description": "Nejpopulárnější JavaScript knihovna pro vytváření uživatelských rozhraní. Založena na komponentách a používá virtuální DOM.",
    "practicalExample": "V Lovable řekneš AI: 'Vytvoř React komponentu pro produktové karty' a dostaneš hotovou komponentu s props a styly.",
    "relatedTerms": ["frontend", "javascript", "jsx", "next-js", "component"],
    "difficulty": "🚀",
    "category": "tools",
    "aiTip": "Popisuj React komponenty podle jejich funkce: 'formulář', 'karta', 'navigace'",
    "tags": ["frontend", "javascript", "ui"],
    "learnMore": "https://react.dev/"
  },
  {
    "id": "next-js",
    "term": "Next.js",
    "czechName": "Next.js framework",
    "description": "Full-stack React framework s pokročilými funkcemi jako server-side rendering, API routes a optimalizace výkonu.",
    "practicalExample": "Next.js ti umožní vytvořit celou aplikaci - frontend i backend API. AI může vygenerovat celou strukturu projektu včetně routingu.",
    "relatedTerms": ["react", "ssr", "vercel", "full-stack"],
    "difficulty": "🔥",
    "category": "tools",
    "aiTip": "Next.js projekty popisuj jako 'web aplikaci s' + konkrétní funkcionalita",
    "tags": ["react", "framework", "full-stack"],
    "learnMore": "https://nextjs.org/"
  },
  {
    "id": "typescript",
    "term": "TypeScript",
    "czechName": "TypeScript",
    "description": "Nadstavba JavaScriptu přidávající statické typování. Pomáhá předcházet chybám a zlepšuje developer experience.",
    "practicalExample": "TypeScript ti řekne už při psaní, když děláš chybu. AI může převést JavaScript kód na TypeScript a přidat správné typy.",
    "relatedTerms": ["javascript", "types", "microsoft", "tsx"],
    "difficulty": "🚀",
    "category": "tools",
    "aiTip": "Řekni AI: 'Převeď na TypeScript' nebo 'přidej typy k této funkci'",
    "tags": ["javascript", "typy", "development"],
    "learnMore": "https://www.typescriptlang.org/"
  },
  {
    "id": "docker",
    "term": "Docker",
    "czechName": "Docker kontejnerizace",
    "description": "Platforma pro vytváření, distribuci a spouštění aplikací v kontejnerech. Zajišťuje konzistentní prostředí všude.",
    "practicalExample": "Docker zabalí tvoji aplikaci i s prostředím do 'kontejneru'. AI může vytvořit Dockerfile pro jakoukoliv aplikaci.",
    "relatedTerms": ["containerization", "kubernetes", "deployment", "devops"],
    "difficulty": "🔥",
    "category": "performance",
    "aiTip": "Řekni AI: 'Vytvoř Dockerfile pro Node.js aplikaci' místo složitých instrukcí",
    "tags": ["kontejnery", "deployment", "devops"],
    "learnMore": "https://docs.docker.com/get-started/"
  },
  {
    "id": "kubernetes",
    "term": "Kubernetes",
    "czechName": "Kubernetes orchestrace",
    "description": "Platforma pro automatickou správu, škálování a orchestraci kontejnerových aplikací ve velkém měřítku.",
    "practicalExample": "Kubernetes automaticky spravuje stovky kontejnerů, restartuje spadlé služby a škáluje podle zátěže. AI může pomoci s konfigurací.",
    "relatedTerms": ["docker", "orchestration", "cloud", "microservices"],
    "difficulty": "🔥",
    "category": "performance",
    "aiTip": "K8s je komplexní - začni s jednoduchými deployment manifesty",
    "tags": ["orchestrace", "cloud", "škálování"],
    "learnMore": "https://kubernetes.io/docs/concepts/overview/"
  },
  {
    "id": "rest-api",
    "term": "REST API",
    "czechName": "REST API",
    "description": "Architektonický styl pro navrhování webových API používající HTTP metody (GET, POST, PUT, DELETE) pro CRUD operace.",
    "practicalExample": "REST API pro blog: GET /posts (seznam), GET /posts/1 (detail), POST /posts (vytvoř), PUT /posts/1 (uprav), DELETE /posts/1 (smaž).",
    "relatedTerms": ["api", "http", "crud", "json"],
    "difficulty": "🌱",
    "category": "architecture",
    "aiTip": "Popisuj REST endpoints podle akce: 'endpoint pro získání uživatelů'",
    "tags": ["api", "http", "web"],
    "learnMore": "https://restfulapi.net/"
  },
  {
    "id": "graphql",
    "term": "GraphQL",
    "czechName": "GraphQL",
    "description": "Dotazovací jazyk pro API umožňující klientům požádat přesně o ta data, která potřebují v jednom požadavku.",
    "practicalExample": "Místo několika REST volání GraphQL umožní získat uživatele i jeho příspěvky jedním query: query { user(id: 1) { name, posts { title } } }",
    "relatedTerms": ["api", "query", "schema", "apollo"],
    "difficulty": "🔥",
    "category": "data",
    "aiTip": "GraphQL schémata popisuj podle dat: 'schéma pro blog s uživateli a příspěvky'",
    "tags": ["api", "query", "data"],
    "learnMore": "https://graphql.org/learn/"
  },
  {
    "id": "jwt",
    "term": "JWT",
    "czechName": "JSON Web Token",
    "description": "Standard pro bezpečné předávání informací mezi stranami jako JSON objekt. Často používán pro autentifikaci.",
    "practicalExample": "Po přihlášení dostaneš JWT token obsahující tvé ID. Tento token posíláš s každým API požadavkem pro ověření identity.",
    "relatedTerms": ["authentication", "security", "token", "authorization"],
    "difficulty": "🚀",
    "category": "security",
    "aiTip": "JWT je pro session management - řekni AI 'implementuj JWT autentifikaci'",
    "tags": ["autentifikace", "token", "bezpečnost"],
    "learnMore": "https://jwt.io/introduction"
  },
  {
    "id": "algorithm",
    "term": "Algorithm",
    "czechName": "Algoritmus",
    "description": "Algoritmus je sada kroků nebo pravidel pro řešení konkrétního problému. Jako recept na vaření - krok za krokem k výsledku.",
    "practicalExample": "Algoritmus pro třídění seznamu: 1) Porovnej první dva prvky, 2) Vyměň je pokud jsou ve špatném pořadí, 3) Pokračuj dokud není celý seznam seřazen.",
    "relatedTerms": ["data-structure", "complexity", "sorting", "searching"],
    "difficulty": "🌱",
    "category": "architecture",
    "aiTip": "Popisuj algoritmy slovně: 'Algoritmus pro najití nejlevnějšího produktu'",
    "tags": ["logika", "řešení problémů", "kroky"],
    "learnMore": "https://www.khanacademy.org/computing/computer-science/algorithms"
  },
  {
    "id": "data-structure",
    "term": "Data Structure",
    "czechName": "Datová struktura",
    "description": "Způsob organizace a ukládání dat v paměti počítače pro efektivní přístup a úpravy. Jako různé typy regálů na knihy.",
    "practicalExample": "Array (pole) ukládá prvky za sebou, Stack (zásobník) funguje jako hromada talířů - poslední přidaný, první odebraný.",
    "relatedTerms": ["algorithm", "array", "object", "database"],
    "difficulty": "🚀",
    "category": "data",
    "aiTip": "Řekni AI jaká data chceš ukládat: 'struktura pro seznam uživatelů s jmény'",
    "tags": ["data", "organizace", "paměť"],
    "learnMore": "https://www.programiz.com/dsa/data-structure-types"
  },
  {
    "id": "object-oriented-programming",
    "term": "OOP",
    "czechName": "Objektově orientované programování",
    "description": "Programovací paradigma založené na objektech - kapsulách obsahujících data i funkce. Jako stavebnice LEGO bloků.",
    "practicalExample": "Objekt 'Auto' má vlastnosti (barva, značka) a metody (nastartuj, brzdi). Můžeš vytvořit mnoho aut ze stejné 'třídy'.",
    "relatedTerms": ["class", "inheritance", "encapsulation", "polymorphism"],
    "difficulty": "🚀",
    "category": "architecture",
    "aiTip": "Mysli na objekty z reálného světa: 'třída pro uživatele s vlastnostmi jméno, email'",
    "tags": ["programování", "objekty", "třídy"],
    "learnMore": "https://www.freecodecamp.org/news/object-oriented-programming-concepts-21bb035f7260/"
  },
  {
    "id": "version-control",
    "term": "Version Control",
    "czechName": "Správa verzí",
    "description": "Systém pro sledování změn v kódu a spolupráci více vývojářů. Jako 'historie změn' v Google Docs, ale pro kód.",
    "practicalExample": "Každá změna kódu se uloží jako 'commit' s popisem. Můžeš se vrátit k libovolné starší verzi nebo sloučit změny od kolegů.",
    "relatedTerms": ["git", "commit", "branch", "merge"],
    "difficulty": "🌱",
    "category": "tools",
    "aiTip": "Version control je pro sledování změn - 'chci uložit aktuální stav kódu'",
    "tags": ["verzování", "spolupráce", "změny"],
    "learnMore": "https://git-scm.com/book/en/v2/Getting-Started-About-Version-Control"
  },
  {
    "id": "caching",
    "term": "Caching",
    "czechName": "Kešování",
    "description": "Ukládání často používaných dat do rychlé paměti pro urychlení přístupu. Jako mít nejoblíbenější knihy na dosah ruky.",
    "practicalExample": "Web si 'zakešuje' obrázky a CSS soubory v prohlížeči. Při další návštěvě se stránka načte rychleji, protože nemusí stahovat vše znovu.",
    "relatedTerms": ["performance", "memory", "cdn", "browser-cache"],
    "difficulty": "🚀",
    "category": "performance",
    "aiTip": "Caching je pro rychlost - 'ukládej často používaná data do rychlé paměti'",
    "tags": ["výkon", "rychlost", "paměť"],
    "learnMore": "https://web.dev/http-cache/"
  },
  {
    "id": "testing",
    "term": "Testing",
    "czechName": "Testování",
    "description": "Proces ověřování, že kód funguje správně a splňuje požadavky. Jako zkouška auta před prodejem.",
    "practicalExample": "Unit test ověří, že funkce 'sčítání' správně sečte 2+3=5. Integration test zkontroluje, že celý formulář funguje od začátku do konce.",
    "relatedTerms": ["unit-test", "integration-test", "debugging", "quality-assurance"],
    "difficulty": "🚀",
    "category": "tools",
    "aiTip": "Testování je ověření funkčnosti - 'otestuj jestli funkce vrací správný výsledek'",
    "tags": ["kvalita", "ověření", "chyby"],
    "learnMore": "https://www.freecodecamp.org/news/types-of-software-testing/"
  },
  {
    "id": "responsive-design",
    "term": "Responsive Design",
    "czechName": "Responzivní design",
    "description": "Přístup k webdesignu, kdy se stránka automaticky přizpůsobí různým velikostem obrazovek - mobil, tablet, desktop.",
    "practicalExample": "Responzivní web na mobilu zobrazí menu jako hamburger ikonu, na desktopu jako horizontální lištu. Obsah se přeorganizuje podle místa.",
    "relatedTerms": ["mobile-first", "breakpoints", "flexible-grid", "media-queries"],
    "difficulty": "🚀",
    "category": "architecture",
    "aiTip": "Responzivní design je přizpůsobení obrazovkám - 'udělej to použitelné na mobilu i desktopu'",
    "tags": ["mobilní", "přizpůsobení", "obrazovka"],
    "learnMore": "https://web.dev/responsive-web-design-basics/"
  },
  {
    "id": "scalability",
    "term": "Scalability",
    "czechName": "Škálovatelnost",
    "description": "Schopnost systému zvládat rostoucí zátěž přidáním zdrojů. Jako možnost přidat další pokladny v obchodě při frontě.",
    "practicalExample": "Horizontální škálování = přidat více serverů. Vertikální škálování = upgradit existující server na výkonnější.",
    "relatedTerms": ["load-balancing", "horizontal-scaling", "vertical-scaling", "performance"],
    "difficulty": "🔥",
    "category": "performance",
    "aiTip": "Škálovatelnost je připravenost na růst - 'navrhni to tak, aby to zvládlo více uživatelů'",
    "tags": ["výkon", "růst", "kapacita"],
    "learnMore": "https://www.atlassian.com/microservices/microservices-architecture/distributed-architecture"
  },
  {
    "id": "encryption",
    "term": "Encryption",
    "czechName": "Šifrování",
    "description": "Proces převodu dat do nečitelné podoby pro zabezpečení. Jako psaní tajnou abecedou, kterou rozumí jen příjemce.",
    "practicalExample": "HTTPS šifruje komunikaci mezi prohlížečem a serverem. Když zadáš heslo, pošle se zašifrované, takže ho nikdo po cestě neukradne.",
    "relatedTerms": ["https", "ssl-tls", "hash", "digital-certificate"],
    "difficulty": "🚀",
    "category": "security",
    "aiTip": "Šifrování je ochrana dat - 'zabezpeč citlivé informace před nepovolanými'",
    "tags": ["bezpečnost", "ochrana", "soukromí"],
    "learnMore": "https://www.cloudflare.com/learning/ssl/what-is-encryption/"
  },
  {
    "id": "concurrency",
    "term": "Concurrency",
    "czechName": "Paralelismus",
    "description": "Schopnost systému vykonávat více úkolů současně. Jako kuchař, který současně vaří polévku a peče maso.",
    "practicalExample": "Web server zpracovává tisíce požadavků současně. Místo čekání na dokončení jednoho, zpracovává další paralelně.",
    "relatedTerms": ["threading", "asynchronous", "parallel-processing", "multitasking"],
    "difficulty": "🔥",
    "category": "performance",
    "aiTip": "Paralelismus je současné vykonávání - 'zpracovávej více věcí najednou'",
    "tags": ["výkon", "současnost", "efektivita"],
    "learnMore": "https://web.dev/when-to-use-local-https/"
  },
  {
    "id": "mvp",
    "term": "MVP",
    "czechName": "Minimální funkční produkt",
    "description": "Nejjednodušší verze produktu s minimálními funkcemi potřebnými k testování základní hypotézy na trhu.",
    "practicalExample": "MVP Instagramu byl jen app pro sdílení fotos s filtry. Bez Stories, IGTV, Reels - jen základní funkcionalita k validaci nápadu.",
    "relatedTerms": ["lean-startup", "validation", "prototype", "iteration"],
    "difficulty": "🌱",
    "category": "performance",
    "aiTip": "MVP popisuj podle hlavní funkce: 'aplikace pro X s pouze základní funkcionalitou'",
    "tags": ["startup", "validace", "prototyp"],
    "learnMore": "https://www.agilealliance.org/glossary/mvp/"
  },
  {
    "id": "indie-hacker",
    "term": "Indie Hacker",
    "czechName": "Nezávislý vývojář",
    "description": "Jednotlivci nebo malé týmy budující vlastní produkty a firmy nezávisle, často s využitím no-code/AI nástrojů.",
    "practicalExample": "Pieter Levels vytvořil Nomad List a RemoteOK sám s minimálním kódem a vydělává $100k+ měsíčně. Typický indie hacker přístup.",
    "relatedTerms": ["bootstrapping", "solo-founder", "build-in-public", "ship-fast"],
    "difficulty": "🚀",
    "category": "vibe-coding",
    "aiTip": "Indie hacker tools: AI pro kód, no-code pro rychlost, ship fast mentalita",
    "tags": ["podnikání", "nezávislost", "startup"],
    "learnMore": "https://www.indiehackers.com/start"
  },
  {
    "id": "ship-fast",
    "term": "Ship Fast",
    "czechName": "Rychlé nasazování",
    "description": "Filozofie rychlého vydávání funkcionalit a iterativního vylepšování na základě uživatelské zpětné vazby.",
    "practicalExample": "Facebook motto bylo 'Move fast and break things'. Lepší publikovat nedokonalou feature a iterovat než čekat měsíce na perfekci.",
    "relatedTerms": ["agile", "iteration", "feedback", "mvp"],
    "difficulty": "🌱",
    "category": "performance",
    "aiTip": "Ship fast znamená 'udělej to funkčně rychle, perfektní bude později'",
    "tags": ["rychlost", "iterace", "agilita"],
    "learnMore": "https://firstround.com/review/speed-as-a-habit/"
  },
  {
    "id": "ci-cd",
    "term": "CI/CD",
    "czechName": "Kontinuální integrace/nasazování",
    "description": "Automatizované procesy pro testování, buildování a nasazování kódu. Umožňuje rychlé a spolehlivé dodávání software.",
    "practicalExample": "Každý commit na GitHub automaticky spustí testy, build a deploy. Pokud testy projdou, nová verze jde automaticky do produkce.",
    "relatedTerms": ["automation", "testing", "deployment", "devops"],
    "difficulty": "🔥",
    "category": "performance",
    "aiTip": "CI/CD je pro automatizaci - řekni 'nastav pipeline pro automatické testy a deploy'",
    "tags": ["automatizace", "testování", "deployment"],
    "learnMore": "https://www.redhat.com/en/topics/devops/what-is-ci-cd"
  },
  {
    "id": "microservices",
    "term": "Microservices",
    "czechName": "Mikroslužby",
    "description": "Architektonický přístup rozdělující aplikaci na malé, nezávislé služby komunikující přes API.",
    "practicalExample": "Netflix má stovky mikroslužeb - jedna pro doporučení, jedna pro platby, jedna pro video streaming. Každá se vyvíjí nezávisle.",
    "relatedTerms": ["api", "scalability", "distributed", "containers"],
    "difficulty": "🔥",
    "category": "architecture",
    "aiTip": "Mikroslužby popisuj podle domén: 'služba pro uživatele', 'služba pro platby'",
    "tags": ["architektura", "škálování", "služby"],
    "learnMore": "https://microservices.io/"
  },
  {
    "id": "serverless",
    "term": "Serverless",
    "czechName": "Bezserverová architektura",
    "description": "Cloud model kde poskytovatel automaticky spravuje infrastrukturu a účtuje pouze za skutečné využití funkce.",
    "practicalExample": "AWS Lambda funkce se spustí jen když je potřeba (např. upload souboru) a platíš jen za milisekundy běhu. Zero maintenance.",
    "relatedTerms": ["lambda", "cloud", "faas", "scalability"],
    "difficulty": "🔥",
    "category": "performance",
    "aiTip": "Serverless je pro event-driven funkcionalitu - 'když se stane X, spusť Y'",
    "tags": ["cloud", "škálování", "automatizace"],
    "learnMore": "https://aws.amazon.com/serverless/"
  },
  {
    "id": "vite",
    "term": "Vite",
    "czechName": "Vite build nástroj",
    "description": "Superrychlý build nástroj pro moderní webový vývoj s instant hot reload a optimalizovaným buildem.",
    "practicalExample": "Vite spustí dev server za sekundy místo minut (Webpack). Hot reload je okamžitý - změna v kódu se projeví ihned v prohlížeči.",
    "relatedTerms": ["build-tool", "webpack", "dev-server", "bundler"],
    "difficulty": "🚀",
    "category": "tools",
    "aiTip": "Vite je rychlejší než Webpack - ideální pro React/Vue projekty",
    "tags": ["build", "rychlost", "vývoj"],
    "learnMore": "https://vitejs.dev/guide/"
  },
  {
    "id": "tailwind",
    "term": "Tailwind CSS",
    "czechName": "Tailwind CSS",
    "description": "Utility-first CSS framework umožňující rychlé stylování přímo v HTML pomocí předpřipravených tříd.",
    "practicalExample": "Místo psaní CSS: <div class='bg-blue-500 p-4 rounded-lg text-white'>. Všechny styly jsou v HTML, velmi rychlé na psaní.",
    "relatedTerms": ["css", "utility", "responsive", "design-system"],
    "difficulty": "🚀",
    "category": "tools",
    "aiTip": "Tailwind je pro rychlé stylování - popisuj vzhled: 'modré tlačítko s bílým textem'",
    "tags": ["css", "styling", "rapid"],
    "learnMore": "https://tailwindcss.com/docs"
  },
  {
    "id": "pwa",
    "term": "PWA",
    "czechName": "Progresivní webová aplikace",
    "description": "Webová aplikace používající moderní web capabilities pro poskytování app-like experience uživatelům.",
    "practicalExample": "Twitter PWA funguje offline, pošle push notifikace a lze ji 'nainstalovat' na mobil z prohlížeče. Vypadá jako nativní app.",
    "relatedTerms": ["service-worker", "offline", "mobile", "web-app"],
    "difficulty": "🔥",
    "category": "architecture",
    "aiTip": "PWA je pro app-like web - 'web aplikace s offline podporou a notifikacemi'",
    "tags": ["mobile", "offline", "webová aplikace"],
    "learnMore": "https://web.dev/progressive-web-apps/"
  },
  {
    "id": "devops",
    "term": "DevOps",
    "czechName": "DevOps",
    "description": "Sada praktik kombinujících softwarový vývoj a IT operace pro zkrácení lifecycle a vyšší kvalitu dodávek.",
    "practicalExample": "DevOps tým automatizuje celý proces: kód → testy → build → deploy → monitoring. Deployment z týdnů na minuty.",
    "relatedTerms": ["ci-cd", "automation", "monitoring", "infrastructure"],
    "difficulty": "🔥",
    "category": "performance",
    "aiTip": "DevOps je o automatizaci celého procesu od kódu po produkci",
    "tags": ["automatizace", "operace", "deployment"],
    "learnMore": "https://aws.amazon.com/devops/what-is-devops/"
  },
  {
    "id": "vue-js",
    "term": "Vue.js",
    "czechName": "Vue.js framework",
    "description": "Progresivní JavaScript framework pro budování uživatelských rozhraní, známý svou jednoduchostí a flexibilitou.",
    "practicalExample": "Vue.js je 'jednodušší React' - méně boilerplate kódu, intuitivnější syntax. Populární v Evropě a Asii.",
    "relatedTerms": ["frontend", "javascript", "component", "vuetify"],
    "difficulty": "🚀",
    "category": "tools",
    "aiTip": "Vue.js je pro rychlý frontend development s méně komplexitou než React",
    "tags": ["frontend", "javascript", "framework"],
    "learnMore": "https://vuejs.org/guide/"
  },
  {
    "id": "cloud-computing",
    "term": "Cloud Computing",
    "czechName": "Cloudové výpočty",
    "description": "Poskytování výpočetních služeb přes internet včetně serverů, storage, databází a software.",
    "practicalExample": "Místo vlastních serverů používáš AWS/Google Cloud/Azure. Platíš jen za to, co využiješ. Automatické škálování podle zátěže.",
    "relatedTerms": ["aws", "azure", "google-cloud", "saas"],
    "difficulty": "🚀",
    "category": "performance",
    "aiTip": "Cloud je pro škálovatelnou infrastrukturu bez starosti o hardware",
    "tags": ["cloud", "infrastruktura", "škálování"],
    "learnMore": "https://aws.amazon.com/what-is-cloud-computing/"
  },
  {
    "id": "build-in-public",
    "term": "Build in Public",
    "czechName": "Veřejné budování",
    "description": "Strategie sdílení celého procesu vývoje produktu veřejně na sociálních médiích pro získání zpětné vazby.",
    "practicalExample": "Každý den tweetuješ progress: 'Den 47: Přidal jsem platební systém, +12 nových uživatelů, $MRR +$200'. Transparentnost buduje komunitu.",
    "relatedTerms": ["indie-hacker", "transparency", "marketing", "community"],
    "difficulty": "🌱",
    "category": "vibe-coding",
    "aiTip": "Build in public je marketing strategie - sdílej progress a učící se momenty",
    "tags": ["marketing", "transparentnost", "komunita"],
    "learnMore": "https://www.buildinpublic.xyz/"
  },
  {
    "id": "embeddings",
    "term": "Embeddings",
    "czechName": "Vektorové reprezentace",
    "description": "Číselné reprezentace textu, obrázků nebo jiných dat jako vektory, které zachycují sémantický význam.",
    "practicalExample": "Slova 'pes' a 'štěně' mají podobné embeddings (blízké vektory), zatímco 'pes' a 'auto' jsou vzdálené. Používá se pro vyhledávání.",
    "relatedTerms": ["vector-database", "rag", "semantic-search", "similarity"],
    "difficulty": "🔥",
    "category": "vibe-coding",
    "aiTip": "Embeddings umožňují hledání podle významu, ne jen podle přesných slov",
    "tags": ["ai", "vektory", "sémantika"],
    "learnMore": "https://platform.openai.com/docs/guides/embeddings"
  }
]